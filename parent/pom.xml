<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.easyframework</groupId>
	<artifactId>parent</artifactId>
	<packaging>pom</packaging>
	<version>0.0.1-SNAPSHOT</version>
	<name>parent</name>
	<url>https://github.com/zhanglongjian/easyframework</url>

	<!-- 分发构件管理 -->
	<distributionManagement>
		<snapshotRepository>
			<id>snapshots</id>
			<name>Snapshots</name>
			<url>http://localhost:8081/nexus/content/repositories/snapshots/</url>
		</snapshotRepository>
		<repository>
			<id>releases</id>
			<name>Releases</name>
			<url>http://localhost:8081/nexus/content/repositories/releases/</url>
		</repository>
	</distributionManagement>
	<!-- scm 版本控制 -->
	<scm>
		<url>scm:git:https://github.com/zhanglongjian/easyframework.git</url>
		<connection>scm:git:https://github.com/zhanglongjian/easyframework.git</connection>
		<developerConnection>scm:git:https://github.com/zhanglongjian/easyframework.git</developerConnection>
		<tag>HEAD</tag>
	</scm>
	<!-- 主要版本依赖 -->
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- 数据库连接对象 -->
		<mysql.driver>com.mysql.jdbc.Driver</mysql.driver>
		<mysql.url>jdbc:mysql://localhost:3306/mysql</mysql.url>
		<mysql.username>root</mysql.username>
		<mysql.password>root</mysql.password>
		<!-- jdk 版本 -->
		<jdk.version>1.8</jdk.version>
		<!-- web 版本 -->
		<servlet.version>3.1.0</servlet.version>
		<jstl.version>1.2</jstl.version>
		<jspapi.version>2.2</jspapi.version>
		<!-- spring & spring web -->
		<spring.version>4.3.3.RELEASE</spring.version>
		<!-- jpa -->
		<jpa.version>5.2.3.Final</jpa.version>
		<jta.version>1.1</jta.version>
		<springDataJPA.version>1.10.4.RELEASE</springDataJPA.version>
		<!-- mybatis -->
		<mybatis.version>3.4.1</mybatis.version>
		<!-- aop -->
		<aspectj.version>1.8.9</aspectj.version>
		<cglib.version>3.2.4</cglib.version>
		<!-- test -->
		<junit.version>4.12</junit.version>
		<!-- server / jetty & tomcat -->
		<jetty.version>9.3.12.v20160915</jetty.version>
		<!-- secuity -->
		<httpClient.version>4.5.2</httpClient.version>
		<shiro.version>1.2.5</shiro.version>
		<jsoup.version>1.9.2</jsoup.version>
		<!--cache -->
		<ehcache.version>2.6.11</ehcache.version>
		<chcache-web.version>2.0.4</chcache-web.version>
		<!-- utils -->
		<fastjson.version>1.2.21</fastjson.version>
		<cglib.version>3.2.4</cglib.version>
		<asm.version>5.1</asm.version>
		<commons-lang3.version>3.4</commons-lang3.version>
		<commons-collections4.version>4.1</commons-collections4.version>
		<commons-io.version>2.5</commons-io.version>
		<guava.version>19.0</guava.version>
		<commons-codec.version>1.10</commons-codec.version>
		<commons-beanutils.version>1.9.2</commons-beanutils.version>
		<commons-fileupload.version>1.3.2</commons-fileupload.version>
		<commons-compress.version>1.12</commons-compress.version>
		<prettytime.version>4.0.1.Final</prettytime.version>
		<!-- log -->
		<slf4j.version>1.7.21</slf4j.version>
		<logback.version>1.1.7</logback.version>
		<!-- maven plugin -->
		<maven-jar-plugin.version>3.0.2</maven-jar-plugin.version>
		<maven-war-plugin.version>3.0.0</maven-war-plugin.version>
		<maven-surefire-plugin.version>2.19.1</maven-surefire-plugin.version>
		<maven-install-plugin.version>2.5.2</maven-install-plugin.version>
		<maven-clean-plugin.version>3.0.0</maven-clean-plugin.version>
		<maven-source-plugin.version>3.0.1</maven-source-plugin.version>
		<maven-compiler-plugin.version>3.5.1</maven-compiler-plugin.version>
		<!--任务调试 -->
		<quartz.version>2.2.3</quartz.version>
		<!--分布式 -->
		<dubbo.version>2.5.3</dubbo.version>
		<zookeeper.version>3.4.8</zookeeper.version>
		<zkclient.version>0.1</zkclient.version>
		<!-- 数据库相关 -->
		<mysql.version>5.1.40</mysql.version>
		<druid.version>1.0.27</druid.version>
		<h2.version>1.4.192</h2.version>
	</properties>
	<!-- 依赖 -->
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>common</artifactId>
				<version>${project.version}</version>
			</dependency>
			<!--cglib code生成类库 动态代理的字节码 -->
			<dependency>
				<groupId>cglib</groupId>
				<artifactId>cglib</artifactId>
				<version>${cglib.version}</version>
			</dependency>
			<!--java字节码操纵框架，直接产生二进制class -->
			<dependency>
				<groupId>org.ow2.asm</groupId>
				<artifactId>asm</artifactId>
				<version>${asm.version}</version>
			</dependency>
			<!--web /servlet -->
			<dependency>
				<groupId>javax.servlet.jsp</groupId>
				<artifactId>jsp-api</artifactId>
				<version>${jspapi.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>javax.servlet-api</artifactId>
				<version>${servlet.version}</version>
			</dependency>
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>jstl</artifactId>
				<version>${jstl.version}</version>
				<scope>provided</scope>
			</dependency>
			<!--web /spring web -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-webmvc</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-web</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<!--spring core / spring others -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-beans</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-aop</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-jdbc</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-tx</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context-support</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-aspects</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-orm</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<!--spring data jpa -->
			<dependency>
				<groupId>org.springframework.data</groupId>
				<artifactId>spring-data-jpa</artifactId>
				<version>${springDataJPA.version}</version>
			</dependency>
			<!--jpa -->
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-entitymanager</artifactId>
				<version>${jpa.version}</version>
			</dependency>
			<dependency>
				<groupId>javax.transaction</groupId>
				<artifactId>jta</artifactId>
				<version>${jta.version}</version>
			</dependency>
			<!--MyBatis -->
			<dependency>
				<groupId>org.mybatis</groupId>
				<artifactId>mybatis</artifactId>
				<version>${mybatis.version}</version>
			</dependency>
			<dependency>
				<groupId>org.mybatis</groupId>
				<artifactId>mybatis-spring</artifactId>
				<version>1.3.0</version>
			</dependency>
			<dependency>
				<groupId>com.github.miemiedev</groupId>
				<artifactId>mybatis-paginator</artifactId>
				<version>1.2.17</version>
			</dependency>
			<!--aop -->
			<dependency>
				<groupId>org.aspectj</groupId>
				<artifactId>aspectjrt</artifactId>
				<version>${aspectj.version}</version>
			</dependency>
			<dependency>
				<groupId>cglib</groupId>
				<artifactId>cglib-nodep</artifactId>
				<version>${cglib.version}</version>
			</dependency>
			<!--utils -->
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>${commons-lang3.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-collections4</artifactId>
				<version>${commons-collections4.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>${commons-io.version}</version>
			</dependency>
			<dependency>
				<groupId>org.ocpsoft.prettytime</groupId>
				<artifactId>prettytime</artifactId>
				<version>${prettytime.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-lang</groupId>
				<artifactId>commons-lang</artifactId>
				<version>2.6</version>
			</dependency>
			<!--Google核心的java常用库 -->
			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>${guava.version}</version>
			</dependency>
			<!-- 处理常用的编码方法工具类，如DES,MD5 -->
			<dependency>
				<groupId>commons-codec</groupId>
				<artifactId>commons-codec</artifactId>
				<version>${commons-codec.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-beanutils</groupId>
				<artifactId>commons-beanutils</artifactId>
				<version>${commons-beanutils.version}</version>
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<!-- 上传文件 -->
			<dependency>
				<groupId>commons-fileupload</groupId>
				<artifactId>commons-fileupload</artifactId>
				<version>${commons-fileupload.version}</version>
			</dependency>
			<!--压缩文件 -->
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-compress</artifactId>
				<version>${commons-compress.version}</version>
			</dependency>
			<!--数据源相关 / 数据库 -->
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>druid</artifactId>
				<version>${druid.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.data</groupId>
				<artifactId>spring-data-mongodb</artifactId>
				<version>1.9.4.RELEASE</version>
			</dependency>
			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>${mysql.version}</version>
			</dependency>
			<!-- velocity 模板引擎 -->
			<dependency>
				<groupId>org.apache.velocity</groupId>
				<artifactId>velocity</artifactId>
				<version>1.7</version>
			</dependency>
			<!-- mail -->
			<dependency>
				<groupId>com.sun.mail</groupId>
				<artifactId>javax.mail</artifactId>
				<version>1.5.6</version>
			</dependency>
			<!-- 谷歌生成二维码 -->
			<dependency>
				<groupId>com.google.zxing</groupId>
				<artifactId>javase</artifactId>
				<version>3.3.0</version>
			</dependency>
			<!-- memcached -->
			<dependency>
				<groupId>net.spy</groupId>
				<artifactId>spymemcached</artifactId>
				<version>2.12.1</version>
			</dependency>
			<!-- 验证码 -->
			<dependency>
				<groupId>com.github.cage</groupId>
				<artifactId>cage</artifactId>
				<version>1.0</version>
			</dependency>
			<!--日志相关 logback -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>${logback.version}</version>
				<scope>runtime</scope>
			</dependency>
			<!--fastjson -->
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>fastjson</artifactId>
				<version>${fastjson.version}</version>
			</dependency>
			<!-- jackson -->
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>2.8.3</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.module</groupId>
				<artifactId>jackson-module-jaxb-annotations</artifactId>
				<version>2.8.3</version>
			</dependency>
			<!--对象缓存&页面缓存 -->
			<dependency>
				<groupId>net.sf.ehcache</groupId>
				<artifactId>ehcache-core</artifactId>
				<version>${ehcache.version}</version>
			</dependency>
			<dependency>
				<groupId>net.sf.ehcache</groupId>
				<artifactId>ehcache-web</artifactId>
				<version>${chcache-web.version}</version>
			</dependency>
			<!--测试相关 -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-test</artifactId>
				<version>${spring.version}</version>
				<scope>test</scope>
			</dependency>
			<!--轻量级的内嵌数据库 -->
			<dependency>
				<groupId>com.h2database</groupId>
				<artifactId>h2</artifactId>
				<version>${h2.version}</version>
				<scope>test</scope>
			</dependency>
			<!--安全相关 -->
			<!--httpClient -->
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpclient</artifactId>
				<version>${httpClient.version}</version>
			</dependency>
			<!-- html 处理 -->
			<dependency>
				<groupId>org.jsoup</groupId>
				<artifactId>jsoup</artifactId>
				<version>${jsoup.version}</version>
			</dependency>
			<!--shiro -->
			<dependency>
				<groupId>org.apache.shiro</groupId>
				<artifactId>shiro-core</artifactId>
				<version>${shiro.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.shiro</groupId>
				<artifactId>shiro-web</artifactId>
				<version>${shiro.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.shiro</groupId>
				<artifactId>shiro-aspectj</artifactId>
				<version>${shiro.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.shiro</groupId>
				<artifactId>shiro-spring</artifactId>
				<version>${shiro.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.shiro</groupId>
				<artifactId>shiro-ehcache</artifactId>
				<version>${shiro.version}</version>
			</dependency>
			<!--定时器&任务调度 -->
			<dependency>
				<groupId>org.quartz-scheduler</groupId>
				<artifactId>quartz</artifactId>
				<version>${quartz.version}</version>
			</dependency>
			<!--分布式 dubbo & zookeeper -->
			<!--dubbo -->
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>dubbo</artifactId>
				<version>${dubbo.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.springframework</groupId>
						<artifactId>spring</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<!--zookeeper -->
			<dependency>
				<groupId>org.apache.zookeeper</groupId>
				<artifactId>zookeeper</artifactId>
				<version>${zookeeper.version}</version>
			</dependency>
			<dependency>
				<groupId>com.github.sgroschupf</groupId>
				<artifactId>zkclient</artifactId>
				<version>${zkclient.version}</version>
			</dependency>
			<!--分布式ID 生成算法 -->
			<dependency>
				<groupId>net.lshift.diffa</groupId>
				<artifactId>snowflake</artifactId>
				<version>1.7.0</version>
			</dependency>
			<!-- jetty -->
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-server</artifactId>
				<version>${jetty.version}</version>
				<scope>provided</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<build>
		<finalName>${project.artifactId}</finalName>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>**/*.xml</include>
					<include>**/*.properties</include>
				</includes>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
				<includes>
					<include>resources.properties</include>
				</includes>
				<filtering>true</filtering>
			</testResource>
			<testResource>
				<directory>src/test/resources</directory>
				<excludes>
					<exclude>resources.properties</exclude>
				</excludes>
				<filtering>false</filtering>
			</testResource>
		</testResources>
		<!-- 插件 -->
		<pluginManagement>
			<plugins>
				<!-- maven clean -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>3.0.0</version>
				</plugin>
				<!-- maven install -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>${maven-install-plugin.version}</version>
				</plugin>
				<!-- maven jar -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${maven-jar-plugin.version}</version>
				</plugin>
				<!-- maven war -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>${maven-war-plugin.version}</version>
				</plugin>
				<!-- jetty 服务器 -->
				<plugin>
					<groupId>org.eclipse.jetty</groupId>
					<artifactId>jetty-maven-plugin</artifactId>
					<version>${jetty.version}</version>
					<configuration>
						<stopKey>foo</stopKey>
						<stopPort>9999</stopPort>
						<scanIntervalSeconds>10</scanIntervalSeconds>
						<webApp>
							<contextPath>/</contextPath>
						</webApp>
						<connectors>
							<connector implementation="org.eclipse.jetty.server.nio.SelectChannelConnector">
								<port>9020</port>
								<maxIdleTime>60000</maxIdleTime>
							</connector>
						</connectors>
					</configuration>
				</plugin>
				<!-- 设置编译时，jdk的版本 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler-plugin.version}</version>
					<configuration>
						<!-- put your configurations here -->
						<source>${jdk.version}</source>
						<target>${jdk.version}</target>
						<meminitial>128m</meminitial>
						<maxmem>512m</maxmem>
						<!-- 所有的测试编译都跳过，如果测试类有问题也会跳过，一般不使用 -->
						<skip>true</skip>
					</configuration>
				</plugin>
				<!-- 测试 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven-surefire-plugin.version}</version>
					<configuration>
						<!-- 置包含的测试类 -->
						<includes>
							<include>**/*Test.java</include>
							<include>**/*test.java</include>
							<include>**/*TestCase.java</include>
						</includes>
						<!-- 设置不进行测试的类 -->
						<!-- <excludes> <exclude>Test*</exclude> </excludes> -->
						<!-- 跳过测试类，一般不使用 -->
						<!-- <skip>true</skip> -->
					</configuration>
				</plugin>
				<!-- 生成 测试 覆盖率报告 -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>cobertura-maven-plugin</artifactId>
					<version>2.7</version>
					<configuration>
						<formats>
							<format>html</format>
							<format>xml</format>
						</formats>
					</configuration>
					<executions>
						<execution>
							<id>cobertura-report</id>
							<goals>
								<goal>cobertura</goal>
							</goals>
							<phase>test</phase>
						</execution>
					</executions>
				</plugin>

				<!-- 生成源代码 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>${maven-source-plugin.version}</version>
					<executions>
						<execution>
							<!-- 在compile打包 -->
							<phase>compile</phase>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>2.5.3</version>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<modules>
	</modules>
</project>